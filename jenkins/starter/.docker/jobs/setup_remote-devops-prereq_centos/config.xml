<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>&lt;!--&#xd;
&lt;pre&gt;&#xd;
Setup DevOps prerequisites for remote server(CentOS 7.3):&#xd;
&lt;ul&gt;&#xd;
&lt;li&gt;Docker(18.06.1-ce)&lt;/li&gt;&#xd;
&lt;li&gt;Docker Compose(1.22.0)&lt;/li&gt;&#xd;
&lt;li&gt;Custom settings for private Docker registry&lt;/li&gt;&#xd;
&lt;li&gt;SSH User(username = jenkins)&lt;/li&gt;&#xd;
&lt;/ul&gt;&#xd;
&lt;/pre&gt;&#xd;
&lt;hr/&gt;&#xd;
&lt;pre&gt;&#xd;
Step-by-step instruction:&#xd;
TODO&#xd;
&lt;/pre&gt;&#xd;
--&gt;&#xd;
&lt;pre&gt;&#xd;
为远端服务器(CentOS 7.3)安装DevOps流程所需预置程序及用户:&#xd;
&lt;ul&gt;&#xd;
&lt;li&gt;docker(18.06.1-ce)/docker-compose(1.22.0)&lt;/li&gt;&#xd;
&lt;li&gt;docker私有仓库配置&lt;/li&gt;&#xd;
&lt;li&gt;远端用户(jenkins)&lt;/li&gt;&#xd;
&lt;/ul&gt;&#xd;
&lt;/pre&gt;&#xd;
&lt;hr&gt;&#xd;
&lt;pre&gt;&#xd;
操作步骤:&#xd;
TODO&#xd;
&lt;/pre&gt;&#xd;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>SKIP</name>
          <description>&lt;pre&gt;
&lt;!-- Skipping the shell execution or not--&gt;
是否跳过远端操作(仅添加系统管理中的jenkins用户接入SERVER的配置)
&lt;/pre&gt;</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SERVER</name>
          <description>&lt;pre&gt;
&lt;!-- Remote server address --&gt;
远端服务器地址
&lt;/pre&gt;</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <jenkins.plugins.parameter__separator.ParameterSeparatorDefinition plugin="parameter-separator@1.0">
          <name>separator-d8411e83-fa11-4630-afc2-806d0c4ed7d2</name>
          <description></description>
          <sectionHeader>如需执行远端操作, SSHPASS必须输入</sectionHeader>
          <sectionHeaderStyle>color: white;background: gray;font-family: Roboto, sans-serif !important;padding: 5px; text-align: center;</sectionHeaderStyle>
          <separatorStyle>border: 0;</separatorStyle>
        </jenkins.plugins.parameter__separator.ParameterSeparatorDefinition>
        <hudson.model.PasswordParameterDefinition>
          <name>SSHPASS</name>
          <description>&lt;pre&gt;
&lt;!-- Super-user root&apos;s password --&gt;
root用户登录密码
&lt;/pre&gt;</description>
          <defaultValue>{AQAAABAAAABApFSjC8WKVamLsG7BkehBxWXF8q12ruiQjfPmsT4ulfiIRO3KBYBb3SZV8x9wXqWn1Qk3P6EOe5fRMPQUaJwW648REzFdyBbdWoJZCbg6nX0=}</defaultValue>
        </hudson.model.PasswordParameterDefinition>
        <jenkins.plugins.parameter__separator.ParameterSeparatorDefinition plugin="parameter-separator@1.0">
          <name>separator-da4826ee-bdc3-4a00-b87f-7547ab6629f6</name>
          <description></description>
          <sectionHeader>安装docker及docker-compose</sectionHeader>
          <sectionHeaderStyle>color: white;background: gray;font-family: Roboto, sans-serif !important;padding: 5px; text-align: center;</sectionHeaderStyle>
          <separatorStyle>border: 0;</separatorStyle>
        </jenkins.plugins.parameter__separator.ParameterSeparatorDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>SKIP_INSTALL_DOCKER</name>
          <description>&lt;pre&gt;
&lt;!-- TODO --&gt;
是否跳过docker/docker-compose安装?
&lt;/pre&gt;</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DOCKER_REGISTRY</name>
          <description>&lt;pre&gt;
&lt;!-- Docker registry address --&gt;
Docker私有仓库地址(&amp;lt;IP&amp;gt;:&amp;lt;Port&amp;gt;)
&lt;/pre&gt;</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <jenkins.plugins.parameter__separator.ParameterSeparatorDefinition plugin="parameter-separator@1.0">
          <name>separator-76a70af6-63b3-4f1b-b973-767c19ef41cd</name>
          <description></description>
          <sectionHeader>添加远端jenkins用户</sectionHeader>
          <sectionHeaderStyle>color: white;background: gray;font-family: Roboto, sans-serif !important;padding: 5px; text-align: center;</sectionHeaderStyle>
          <separatorStyle>border: 0;</separatorStyle>
        </jenkins.plugins.parameter__separator.ParameterSeparatorDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>SKIP_ADD_USER</name>
          <description>&lt;pre&gt;
&lt;!-- TODO --&gt;
是否跳过添加远端jenkins用户
&lt;/pre&gt;</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>HOME_DIR</name>
          <description>&lt;pre&gt;
&lt;!-- Remote jenkins user&apos;s home dir --&gt;
远端jenkins用户目录所属目录
&lt;/pre&gt;</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>GEN_KEY</name>
          <description>&lt;pre&gt;
&lt;!-- Generating new private RSA key for remote jenkins user or not --&gt;
是否为远端jenkins用户生成私钥文件(如不生成,将使用jenkins实例生成的私钥文件)
&lt;/pre&gt;</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <com.joelj.jenkins.eztemplates.TemplateProperty plugin="ez-templates@1.3.2"/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.groovy.SystemGroovy plugin="groovy@2.1">
      <source class="hudson.plugins.groovy.StringSystemScriptSource">
        <script plugin="script-security@1.51">
          <script>// Fix &quot;dollar sign&quot; issue
import hudson.model.*

/*
println &quot;~~~~~~~~~~~~~~~~&quot;
println build.buildVariables
println &quot;~~~~~~~~~~~~~~~~&quot;
*/

def param = new PasswordParameterValue(
  &apos;SSHPASS&apos;,
  build.buildVariableResolver.resolve(&quot;SSHPASS&quot;).replaceAll(&apos;\\$&apos;,&apos;\\$\\$&apos;)
)
def pa = build.getAction(ParametersAction.class).createUpdated([param])
build.addOrReplaceAction(pa)

/*
println &quot;~~~~~~~~~~~~~~~~&quot;
println build.buildVariables
println &quot;~~~~~~~~~~~~~~~~&quot;
*/</script>
          <sandbox>false</sandbox>
        </script>
      </source>
    </hudson.plugins.groovy.SystemGroovy>
    <hudson.tasks.Shell>
      <command>#!/usr/bin/env bash

test &quot;$SKIP&quot; == &quot;true&quot; &amp;&amp; exit 0

## Parameters checking
#INVALID_PARAM=&apos;Parameters($SERVER/$SSHPASS) could NOT be null&apos;
## 参数检查
INVALID_PARAM=&apos;必须提供远端服务器地址($SERVER)及root密码($SSHPASS)&apos;

(test -z &quot;$SERVER&quot; || test -z &quot;$SSHPASS&quot;) &amp;&amp; echo &quot;$INVALID_PARAM&quot; &amp;&amp; exit 1

##################################################

## root&apos;password checking
#INVALID_PASS=&quot;Invalid root&apos;s password&quot;
## root密码有效性检查
INVALID_PASS=&quot;无效root密码&quot;

sshpass -ev ssh root@${SERVER} &apos;pwd&apos; 2&gt;/dev/null 1&gt;/dev/null &amp;&amp; INVALID_PASS=&quot;&quot;
test -n &quot;$INVALID_PASS&quot; &amp;&amp; echo &quot;$INVALID_PASS&quot;
test -n &quot;$INVALID_PASS&quot; &amp;&amp; exit 1

##################################################

rm -f jenkins.id_rsa*
test &quot;${GEN_KEY}&quot; == &quot;true&quot; &amp;&amp; ssh-keygen -t rsa -b 4096 -f jenkins.id_rsa -N &quot;&quot; &gt; /dev/null
rm -f jenkins.id_rsa.pub

test -f jenkins.id_rsa &amp;&amp; mv jenkins.id_rsa /root/.ssh/${SERVER}.id_rsa
test -f /root/.ssh/${SERVER}.id_rsa || \
ln -s /root/.ssh/id_rsa /root/.ssh/${SERVER}.id_rsa

chmod 600 /root/.ssh/${SERVER}.id_rsa

#SSH_KEY_PATH=&quot;Following is the SSH private key of the jenkins user in remote server(${SERVER}):&quot;
SSH_KEY_PATH=&quot;jenkins用户登录远端服务器(${SERVER})所需的私钥文件:&quot;
echo &quot;$SSH_KEY_PATH&quot;
echo &quot;/root/.ssh/${SERVER}.id_rsa&quot;
ls -l &quot;/root/.ssh/${SERVER}.id_rsa&quot;

#GEN_PUB_KEY=&quot;Generating SSH public key&quot;
GEN_PUB_KEY=&quot;生成jenkins用户远端服务器公钥&quot;
echo &quot;$GEN_PUB_KEY&quot;
ssh-keygen -y -f /root/.ssh/${SERVER}.id_rsa &gt; /root/.ssh/${SERVER}.id_rsa.pub
sshpass -e scp /root/.ssh/${SERVER}.id_rsa.pub root@${SERVER}:/root/jenkins.id_rsa.pub
sshpass -e scp /root/.ssh/config root@${SERVER}:/root/jenkins.ssh.config

#PREREQ_PACK=&quot;Transfering prerequisites install packages&quot;
PREREQ_PACK=&quot;传输预置程序安装包&quot;
echo &quot;$PREREQ_PACK&quot;
rm -f /tmp/prereq.tar.gz
tar -cz -f /tmp/prereq.tar.gz -C /root prereq
sshpass -e scp /tmp/prereq.tar.gz root@${SERVER}:/root

cat &gt;/tmp/env.sh &lt;&lt;EOT
#!/usr/bin/env bash
export REGISTRY=&quot;${DOCKER_REGISTRY}&quot;
export HOMEDIR=&quot;${HOME_DIR}&quot;
export SKIP_INSTALL_DOCKER=&quot;${SKIP_INSTALL_DOCKER}&quot;
export SKIP_ADD_USER=&quot;${SKIP_ADD_USER}&quot;
EOT
sshpass -e scp /tmp/env.sh root@${SERVER}:/tmp/env.sh

##################################################

## Login to remote server by SSH connection\
## SSH登录至远端服务器


sshpass -e ssh -o StrictHostKeyChecking=no root@${SERVER} &lt;&lt;&apos;exit&apos;

source /tmp/env.sh

#if [ ! -d /root/prereq ]; then
#  tar -xzv -f /root/prereq.tar.gz -C /root
#fi
if [ -d /root/prereq ]; then
  echo &quot;Move [/root/prereq] to [/root/prereq-$(date +%s)]&quot;
  mv &quot;/root/prereq&quot; &quot;/root/prereq-$(date +%s)&quot;
fi
tar -xzv -f /root/prereq.tar.gz -C /root

#INSTALL_DOCKER=&quot;Installing docker &amp; docker-compose&quot;
INSTALL_DOCKER=&quot;安装docker及docker-compose&quot;
test &quot;$SKIP_INSTALL_DOCKER&quot; == &quot;true&quot; || echo &quot;$INSTALL_DOCKER&quot;
test &quot;$SKIP_INSTALL_DOCKER&quot; == &quot;true&quot; || /root/prereq/centos/docker/setup-prereq.sh &quot;$REGISTRY&quot;
#ls -l /root/prereq/centos/docker/setup-prereq.sh

#ADD_USER_JENKINS=&apos;Adding user &quot;jenkins&quot;&apos;
ADD_USER_JENKINS=&apos;添加远端用户&quot;jenkins&apos;
test &quot;$SKIP_ADD_USER&quot; == &quot;true&quot; || echo &quot;$ADD_USER_JENKINS&quot;
test &quot;$SKIP_ADD_USER&quot; == &quot;true&quot; || /root/prereq/centos/remote-user/useradd-jenkins.sh &quot;$HOMEDIR&quot;
#ls -l /root/prereq/centos/remote-user/useradd-jenkins.sh

# Remote operations complete
# 结束远端服务器操作
exit</command>
    </hudson.tasks.Shell>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>NAME=jenkins@${SERVER}
HOSTNAME=${SERVER}
PORT=22
USERNAME=jenkins
REMOTE_DIR=/home/jenkins
KEY_PATH=/root/.ssh/${SERVER}.id_rsa</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>create_publish-over-ssh</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.9"/>
  </buildWrappers>
</project>