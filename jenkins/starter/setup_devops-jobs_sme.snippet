<pre><!-- TODO -->
项目名称(请输入数字/小写英文/减号(用作分隔),用作部署目录及docker镜像命名)
</pre>

/* ************************ */

GIT_BRANCH
<pre><!-- TODO -->
workbench的git分支(SERVER_TYPE为DEV时,此参数才生效)
</pre>

/* ************************ */

import jenkins.model.*;

def name = build.buildVariables.get('NAME');
def server = build.buildVariables.get('SERVER');
def serverType = build.buildVariables.get('SERVER_TYPE');
def source = build.buildVariables.get('SORUCE');
def gitBranch = build.buildVariables.get('GIT_BRANCH');

// Check the fucking parameters
def pass = (name ==~ /[a-z0-9\-]+/);
if (! pass) {
  println '无效项目名称:项目名称不允许为空且只允许输入半角数字/小写英文/减号(用作分隔)';
  return 1;
}

if ( server == 'NONE' ) {
  println '无效远端服务器:请使用[setup_remote-devops-prereq_centos]创建远端服务器配置';
  return 1;
}

if ( null == gitBranch || '' == gitBranch ) {
  gitBranch = 'master';
}

def view = serverType + ' - ' + name;
if ( serverType == 'DEV' ) {
  view = view + '_' + gitBranch;
}
println 'ListView = ' + view

println '~~~~~~~~~~ 本次DevOps任务创建参数信息 ~~~~~~~~~~';
println '项目名称:' + build.buildVariables.get('NAME');
println '远端服务器:' + build.buildVariables.get('SERVER');
println '服务器类型:' + build.buildVariables.get('SERVER_TYPE');
println '构建来源:' + build.buildVariables.get('SORUCE');
println 'git分支:' + build.buildVariables.get('GIT_BRANCH');
println '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~';

println '创建ListView:' + view;
